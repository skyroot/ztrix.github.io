<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Joystacker | From Zero To X]]></title>
  <link href="http://blog.ztrix.me/blog/categories/joystacker/atom.xml" rel="self"/>
  <link href="http://blog.ztrix.me/"/>
  <updated>2014-08-21T16:03:57+08:00</updated>
  <id>http://blog.ztrix.me/</id>
  <author>
    <name><![CDATA[zTrix]]></name>
    <email><![CDATA[i@ztrix.me]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[欢乐积木盗版应用分析]]></title>
    <link href="http://blog.ztrix.me/blog/2014/07/07/joystacker-pirated-analysis/"/>
    <updated>2014-07-07T01:05:52+08:00</updated>
    <id>http://blog.ztrix.me/blog/2014/07/07/joystacker-pirated-analysis</id>
    <content type="html"><![CDATA[<p>前面一篇日志提到，我们的游戏欢乐积木刚刚在国内安卓市场上线一天，立刻就被盗版重打包做了植入，这篇日志就来分析一下，盗版应用究竟做了什么改动。</p>

<p>总共发现了至少 5 个不同的盗版打包，其中包名为 <code>com.rayxyj.stacker</code> 的盗版上线最早，下载量和用户使用都最大，因此就拿这个盗版版本开刀。</p>

<p>这家盗版在多个市场都有投放，比如 <a href="http://www.wandoujia.com/apps/com.rayxyj.stacker">http://www.wandoujia.com/apps/com.rayxyj.stacker</a> 和 <a href="http://www.anzhuoapk.com/games-15-2/62640/">http://www.anzhuoapk.com/games-15-2/62640/</a> ，并且表明了开发者来源是掌赢科技有限公司，下载次数应该已经上千，在最近的数据统计中，使用的用户占比 12.25%，因此是一个比较典型的案例。</p>

<p>这个盗版版本基于的是我的 1.4 版本重打包。后续我又发布了 1.6 版本，他们并没有跟进。</p>

<!-- more -->


<p>那么重打包发布的盗版积木究竟植入了什么东西呢？我们来一探究竟。</p>

<h2>Manifest 文件</h2>

<p>首先使用 <code>apktool</code> 来解包。</p>

<p><code>bash
apktool d 20140618190420_534.apk
</code></p>

<p>对比盗版的 AndroidManifest.xml 和我自己项目的 Manifest 文件，可以发现，盗版主要做了三项修改：</p>

<ol>
<li>修改包名</li>
<li>增加 Android 各种权限申请</li>
<li>增加植入的 Activity 和 Service</li>
</ol>


<h3>包名变化</h3>

<p>首先包名发生了变化，由于各大市场都是用包名作为应用的唯一识别，因此必须改变包名才能重新发布不冲突。</p>

<p>原有包名</p>

<p><code>xml
&lt;manifest xmlns:android="http://schemas.android.com/apk/res/android" package="com.rayx.stacker"&gt;
</code></p>

<p>盗版包名</p>

<p><code>xml
&lt;manifest android:versionCode="14" android:versionName="1.4" package="com.rayxyj.stacker"
  xmlns:android="http://schemas.android.com/apk/res/android"&gt;
</code></p>

<h3>额外权限请求</h3>

<p>权限方面，在原有权限的基础上，新增加了如下权限，注意其中的 <code>WAKE_LOCK</code>, <code>RESTART_PACKAGES</code>, <code>SYSTEM_ALERT_WINDOW</code>，这些权限都是明显的与应用功能不符合的权限要求，其中 <code>RESTART_PACKAGES</code> 权限在 API Level 8 之后，都已经被 Google 所放弃。</p>

<p><code>xml
&lt;uses-permission android:name="android.permission.INTERNET" /&gt;
&lt;uses-permission android:name="android.permission.READ_PHONE_STATE" /&gt;
&lt;uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /&gt;
&lt;uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" /&gt;
&lt;uses-permission android:name="android.permission.ACCESS_WIFI_STATE" /&gt;
&lt;uses-permission android:name="android.permission.WAKE_LOCK" /&gt;
&lt;uses-permission android:name="android.permission.RESTART_PACKAGES" /&gt;
&lt;uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" /&gt;
</code></p>

<h3>activity 与 service 植入</h3>

<p>以下是植入的 Activity 和 Service</p>

<p>```xml
&lt;meta-data android:name=&ldquo;DX_EKYML_DIA&rdquo; android:value=&ldquo;07ac14f8dc0a4eb4a4facb4e48ea5cfa&rdquo; />
<service android:name="com.android.mks.Ssreb" />
<activity android:theme="@*android:style/Theme.NoTitleBar.Fullscreen" android:name="com.android.mks.Atcab" />
<receiver android:name="com.android.mks.Bvreb"></p>

<pre><code>&lt;intent-filter&gt;
    &lt;action android:name="android.intent.action.USER_PRESENT" /&gt;
&lt;/intent-filter&gt;
&lt;intent-filter&gt;
    &lt;action android:name="android.intent.action.PACKAGE_ADDED" /&gt;
    &lt;data android:scheme="package" /&gt;
&lt;/intent-filter&gt;
</code></pre>

<p></receiver>
```</p>

<p>可以看出，盗版游戏植入了一个名字极具隐蔽性的 package <code>com.android.mks</code>，如果不仔细看还以为是 Android 自带的系统 package，同时它接受系统的 <code>USER_PRESENT</code> 和 <code>PACKAGE_ADDED</code> 消息，分别代表用户解锁屏幕事件和用户安装了新应用事件。另外，AndroidManifest 中还植入了一个 <code>meta-data</code>，后面的分析可以知道，它是一个广告平台的 App key。</p>

<h2>植入代码分析</h2>

<p>植入代码是经过混淆的，主要代码在 <code>com.android.mks</code> 包下面。</p>

<p>经过检查发现，原来积木的代码基础上，并没有进行直接的代码插入和改写，完全保持了原样，但是如果不修改原有代码的逻辑，如何让插入代码可以执行呢？注意 <code>AndroidManifest</code> 文件里面注册的 BroadcastReceiver，由于注册了两个系统消息(<code>USER_PRESENT</code> 和 <code>PACKAGE_ADDED</code>) 的监听接受，它实际上已经可以不注入任何额外代码就能运行，只需要等用户解锁屏幕即可运行，因此是非常聪明的一种做法，另外，它还注册了对用户安装新应用的事件监听，增加自己代码被唤醒的机会。</p>

<p>再考虑到盗版发布的速度，可以推测，这很有可能是已经成形的自动植入方案，直接解包，插入 <code>com.android.mks</code> 包和 AndroidManifest 相关配置，无需人工分析原有代码，编写一个自动化工具即可搞定。如果要在原有代码上进行植入，反而需要人工分析原有逻辑，找到最佳植入点，不利于快速重打包，对不同应用来说还需要进行不同的分析，很难做到“产业化”和“规模化”。</p>

<p>想到这里不禁感到一阵心寒，盗版产业虽然平时看不到，但是管中窥豹，这点小细节基本就能看出这个产业也是十分自动化和健全的，甚至可能是一套完整的自动化机制，自动寻找新上线的目标应用，自动下载，自动重打包，自动再上传，全程无人工干预，自动进行。</p>

<p>继续分析代码。一个很奇怪的现象是，几乎所有的用到字符串的地方，都是用字符数组的形式来做的，比如，在 <code>u/A.class</code> 中，发现了如下常量</p>

<p><code>java
public static String a = new String(new byte[] { 104, 116, 116, 112, 58, 47, 47, 108, 101, 109, 105, 108, 111, 99, 107, 46, 99, 111, 109, 58, 56, 55, 56, 48, 47, 112, 117, 115, 104, 47, 104, 116, 109, 108, 47, 112, 117, 115, 104, 76, 105, 115, 116, 46, 106, 115, 112 });
</code></p>

<p>将它转化为字符串，得到 <code>http://lemilock.com:8780/push/html/pushList.jsp</code>，打开这个网站，可以看到是一家小型 Android 广告平台，这个链接是它的广告推送列表。</p>

<p>由此可以确定这个重打包主要目的是插入广告。</p>

<p>那么这个乐米广告平台到底是怎样的一个平台呢？为什么字符串要全部用这种不直观的形式来使用呢？注册一个账号试试。</p>

<p>首先看到平台简介</p>

<p><code>
平台简介
乐米平台是德信软件科技有限公司（以下简称“德信”）旗下的平台，德信是一家致力于android开发的公司。乐米平台目前主要从事android广告创新和研发。我们广告平台包含弹窗广告、插屏广告、新版推送广告模式！
</code></p>

<p>找到他的 SDK 下载，<a href="http://lemilock.com/lemi/developers.jsp">http://lemilock.com/lemi/developers.jsp</a> 页面，其“先进特性”让人惊呆</p>

<ul>
<li>开发者使用乐米广告后，各大平台不会检测出广告，100% 通过率保证</li>
<li>用户使用过程中不会被安全软件拦截，不会被各种去广告软件检测</li>
<li>最重要的，它甚至可以自定义包名，Activity 名，Service 名，甚至 appid 的 key 都可以自由指定</li>
</ul>


<p>这里放个截图</p>

<p><img src="/images/joystacker-pirated/lemi.png" alt="乐米" /></p>

<p>果然是一家为了流氓广告应用考虑十分周到的广告平台，而且，这些先进特性也不是随便吹的，我们可以去市场上看看</p>

<p><img src="/images/joystacker-pirated/wandoujia.jpg" alt="豌豆荚" /></p>

<p><img src="/images/joystacker-pirated/yiyonghui.jpg" alt="易用汇" /></p>

<p>两家市场都被轻易骗过，乐米广告果然是盗版之友。</p>

<p>现在差不多明白了，这些字符串写成这种形式，包名任意定制等特性，就是为了绕过各大安卓市场的广告检查，最终显示给用户一个“绿色、无广告、无病毒”的好应用形象。</p>

<p>于是，下载一个乐米 SDK 并和植入的代码进行对比，经过分析发现，基本就是乐米的 SDK，并没有发现其他代码。简单分析可以知道，乐米 SDK 所做的事情就是，在被 <code>USER_PRESENT</code> 或 <code>PACKAGE_ADDED</code> 系统消息唤醒之后，它会尝试开启自己的后台 service，后台 service 会去请求广告，下载广告数据，然后在一定的时间条件下显示广告，诱惑用户点击，自动下载应用，显示系统消息，检测广告应用的安装情况等。</p>

<p>那么，除了广告之外，还有没有其他恶意行为呢？比如偷偷上传通讯录什么的？经过分析发现，没有找到相关恶意代码，没有申请相关权限，也没有看到相关流量，基本排除存在这些恶意行为的可能。</p>

<h2>真机测试</h2>

<p>根据前面的分析，植入广告后得盗版应用植入了广告，并且初步分析并没有恶意代码行为，因此我勇敢的用了自己的手机来做小白鼠实验，进行真机测试。</p>

<p>首先卸载我的正版应用，装上盗版，简单的进入界面，然后关闭屏幕，然后点亮屏幕，解锁，反复多次之后，终于看到了广告加载了出来。</p>

<p><img src="/images/joystacker-pirated/test_pop.png" alt="pop" /></p>

<p>这个广告弹窗十分高级，可以在屏幕内任意拖动。点击下载玩玩，没有弹出提示，真的立刻就下载了。点击详情介绍，会弹出它注册的 Activity</p>

<p><img src="/images/joystacker-pirated/test_detail.png" alt="app detail" /></p>

<p>然后下载了之后就提示安装</p>

<p><img src="/images/joystacker-pirated/test_install.png" alt="app install" /></p>

<p>流氓软件下载来的肯定也不是好应用，这个打飞机游戏居然还要发短信、查看短信、编辑短信，莫非是一个吸费应用？看到这不敢装了，直接取消安装。</p>

<p>过了一会，发现系统通知栏有动静，打开一看，广告平台又弹出了新应用推荐通知</p>

<p><img src="/images/joystacker-pirated/test_noti.png" alt="android notification" /></p>

<p>校花校草，帅哥美女！关键词吸引我点击了一下，</p>

<p><img src="/images/joystacker-pirated/test_detail2.png" alt="app detail2" /></p>

<p>果然又是一个吸引宅男屌丝用户的应用，点击下载，这个权限要求更可怕，要求收短信、录音、拍照、读写通话记录、还有修改联系人！</p>

<p><img src="/images/joystacker-pirated/test_install2.png" alt="app install" /></p>

<p>虽然图里面的那个妹子还挺清纯可爱的，但是看到这也不得不忍痛取消了，这权限简直是要管理手机的节奏啊。</p>

<p>连续点击返回，准备退出广告，结果发现，应用程序都退出了，广告弹窗居然仍然存在，看来弹窗并不是依附在程序界面中的。</p>

<p><img src="/images/joystacker-pirated/still_exist.png" alt="still exist" /></p>

<p>那如何才能退出这个广告弹窗呢？测试了半天，发现只有点击广告详情介绍，进入详情页面，然后再点击两次返回键，才能退出广告。流氓广告的特性展露了出来。</p>

<h2>植入的其他资源文件分析</h2>

<p>重打包的 apk 文件中，在 assets 目录下植入了一个 <code>res_pro.png</code> 的文件，虽然带着 .png 的扩展名，但是实质上是一个 zip 文件。解压之后，得到了几个图片文件，看起来应该也是广告平台的资源文件。</p>

<h1>总结</h1>

<p>经过以上的初步分析，现在基本弄清楚了盗版重打包的思路。可怕的地方不在于盗版应用有能力做重打包和代码植入，而在于他们的自动化和产业化，快速盗版，快速上线，一个应用也许赚不到多少钱，但是盗版形成规模之后，收入还是很可观的。</p>

<p>第二个可怕之处在于像乐米这样的广告平台，本身就是一个盗版应用集散地，同时也为盗版应用提供技术支持，形成了盗版利益链条中的中间重要一环。我不知道还有多少像乐米这样的广告平台，因为在 Google 搜索乐米，甚至都在前面得不到搜索结果，但我知道，一个链条的形成和运转必然不会只有一个中枢，一定有一批像乐米的平台处于其中，分工明确，协作赚钱，最终，破坏的是市场，侵犯的是开发者的权益，受伤害的是最终用户。</p>

<p>世界如此之大，我不能明白为什么只有中国的市场如此的混乱，3 年前的时候，我还年少，富有热情去做这样一个游戏，而现在，即使有热情也会被这混乱不堪的市场局面所浇灭吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[积木的欢乐旅程]]></title>
    <link href="http://blog.ztrix.me/blog/2014/07/06/joystacker-review/"/>
    <updated>2014-07-06T14:02:50+08:00</updated>
    <id>http://blog.ztrix.me/blog/2014/07/06/joystacker-review</id>
    <content type="html"><![CDATA[<p>3 年前的一个月黑风高夜，大家都还很年轻，我们几个小朋友聚在一起，想尝试做点 Android 游戏开发。我拉来了同班同学诚哥，拉来了高中同学张光耀。两个程序员加一个美工，开始了一番离奇刺激又不乏艰辛的奇幻旅程。</p>

<p>大家一番讨论之下，决定做一款简单好玩的益智类游戏。我一拍大脑想到了几年前曾经玩过的一个叫做 superstacker2 的 Flash 游戏（现在这个游戏已经有了 Android 版本，当时还没有，想玩 Flash 原版请戳<a href="http://www.kongregate.com/games/inxile_ent/super-stacker-2">这里</a> ），于是想把这个游戏做到手机上一定很好玩，而且，我们可以增加重力感应关卡，微创新嘛！当然我们还想了其他很多乱七八糟好玩又离奇的功能，但是最终都没有付诸实践。</p>

<!-- more -->


<p>初期的开发是很快的。我们用了 AndEngine 作为游戏引擎，用了 box2d 作为物理引擎。糙快猛的一番鼓捣之后，第一个版本就做完了，那个时候张光耀还没工作，学工业设计出身和对漫画感兴趣的他，对现代界面和游戏界面设计其实也没有很强的感觉，于是第一个版本的界面很是粗糙。关卡方面，我匆忙设计了 20 个初始关卡，放在一个屏幕里面，重力感应和普通关卡是混杂的，也没有音乐和音效。就这样，我们就称之为第一个版本做好了吧。</p>

<p>第一个版本做好之后，我们就拿去参加谷歌 Android 应用开发中国大学生挑战赛。真好赶上 2011 年，谷歌刚办第二届。</p>

<p>哦，忘了说了，最开始的名字还不叫欢乐积木，叫做快乐积木，版本是 1.0。</p>

<p>比赛分区域进行，抱着试试看的心态提交了游戏，拉上康总作为指导老师，没想到，结果下来之后，居然是<a href="http://www.google.cn/university/androidchallenge/2011/regional.html#tab=UNDEFINED-CONTENT-ITEM-2">北京赛区一等奖</a>。</p>

<p><img src="/images/joystacker/google-android-contest-2011.png" alt="Google-Android-University-Contest-2011" /></p>

<p>当时还是有点小激动的。于是就为了决赛又做了一系列优化，把当时有能力做的事情都做了，发布了 <a href="/downloads/happy-stacker_1.1.apk">1.1 版本</a>，满心期待的参加决赛。</p>

<pre><code>version 1.1 changelog

1，增加到了40个关卡
2，增加了菜单按钮的点击状态
3，关卡存储增加了加密措施
4，重画了程序开始画面的背景，标题更加清晰明亮
5，修改了三角形碰撞检测的 bug
6，动态检测积木是否可以放，如果在不能放的地方，那么积木变红，表示不能放置
7，修复了多点触摸带来的bug
8，增加了指向当前积木的箭头，增加了待放积木移动的动画
9，重新做了关卡选择页面的美工图片，增加了关卡屏幕切换效果
10，解决了三角形积木显示附带一条白线的bug
11，修复了积木可放置性判断不在积木中点的bug
12，修复了待放积木移动时，最后一个直接出现的bug
13，修复了 monkey 测试出错的bug
14，为每关增加了最高分显示，在选择关卡界面增加了星星数量显示
15，增加了退出确认对话框
16，修复了大屏幕下，关卡选择页面出错的问题
17，增加了来电话等情况游戏自动暂停的处理
18，增加了指向当前待放积木的箭头
19，增加了游戏暂停的积木动画
20，修复了积木并未下落但是关卡失败的bug（多线程未加锁）
21，不允许将积木放在deadline上的判断，积木会变红示意玩家不能放置。
22，修复了积木缩略图造成的崩溃
23，修复了menu里面积木表情跳变的bug
24，增加了跳动的开始游戏文字
25，增加了纯色长条的长度，避免太大的失真
26，计算分数考虑了积木的稳定性
27，增加了教学步骤
28，给重力关卡增加了 G 标志
29，给游戏中的所有积木增加了许多种表情
30，修复了长条表情模糊的问题
31，增加了过关显示星星数量
32，过关如果是新最高分增加了最高分显示
33，增加了通关恭喜画面
34，增加了menu中的 help 按钮，用于帮助用户玩游戏
35，对关卡背景做了调优
36，增加了内存优化，尽量少占用内存
37，前面的20个关卡根据用户反馈做了调整
38，重构了所有代码
</code></pre>

<p>满心期待等来的结果是无尽的失望，在总决赛中最终只获得了优秀奖。可能是评委口味不同了吧，决赛的名次非常出乎意料，大家都看好的几款软件都没有得到好名次，一等奖二等奖反而不是那么有说服力，而我的积木，作为预赛北京赛区一等奖，决赛中名次反而比北京赛区的其他作品名次低很多。</p>

<p>埋怨太多有没有用，现在看来，当时的作品确实是十分粗糙的，至少我现在自己都看不下去。比赛也就如此了，生活还要继续。于是积木就暂时放在那里了，没有管它。</p>

<p>2012 年，我认识了大神张泽清。他是 <a href="https://www.teambition.com/">teambition</a> 的创始人之一，设计天才，难得的是，他其实是学编程开发出身的，我记得是上海交大某计算机相关专业，所以，写代码也不在话下，综合起来看，张泽清是我认识的各路大神中，设计+开发综合技能值最高的。</p>

<p>他玩了玩这个游戏之后，觉得玩法还不错，于是花了一个下午（真的只用了一个下午！3D 建模乱七八糟的都是顺手拈来啊，看的我眼花缭乱），做了现在的界面。</p>

<p>这里放图对比一下，左边是老界面，右边是新界面：</p>

<p><img src="/images/joystacker/cmp1.jpg" alt="对比1" /></p>

<p><img src="/images/joystacker/cmp2.jpg" alt="对比2" /></p>

<p>既然界面终于感觉能看了，我顿时又有了把游戏好好再重构一下，做一个足够质量的，可以放到市场给大家玩的版本的信念。</p>

<p>由于一直都是抽空在做，这个过程是漫长的，断断续续做了很久。一种做东西就要做好的奇怪感觉充斥在我心里，我做了非常多的细节上的优化工作，从代码质量，到文件大小，到界面细节，我都做了力所能及的精细打磨。</p>

<p>后来我增加到了 100 个关卡，为此，我还专门制作了<a href="http://stackeditor.sinaapp.com/editor.html">关卡编辑器</a>，每个关卡的设计都经过精心的调试，保证趣味性和难度的统一（作为趣味游戏来说，其实是难度太高了，一般人真玩不动。。）。</p>

<p>我还做了游戏音乐和音效（是的！现在游戏音乐音效听起来如此不专业的原因就是，是我做的！），凭着对音乐的一点点感觉，学习了一下 GarageBand 就做了其中的开场音乐和过场音乐，以及每个积木的不同音效。虽然很挫，但也是完成了一桩心愿。</p>

<p>长久的拖沓与不能忍受残次的某种怪癖导致，两年过去了，我才最终把积木扔到了 <a href="https://play.google.com/store/apps/details?id=com.rayx.stacker">Play Store</a> 上。这个时候，版本号终于变成了 1.2，也就是说，1.1 版本到 1.2 版本，就这么零零散散断断续续絮絮叨叨疯疯狂狂的过了 2 年。</p>

<p>引以为豪的是，在界面适配上做了大量工作之后，现在积木的界面可以适配我遇到过的所有 Android 机型和平板。后来，我遇到了 Samsung 变态 1080p 分辨率的 Galaxy S4，我尝试运行了一下，界面适配仍然是十分完美。甚至在兼容性方面，我一直做到了兼容 Android 1.6，在 Play Store 上发布的时候，Play Store 就会显示，本次发布的 Apk 兼容 6387 种 Android 设备，不兼容的设备为 0。后来我们在 360 的 testin 云测上进行了测试，发现除了联想的第一代 Android 手机不能正常运行之外，其他手机都可以正常运行无压力。</p>

<p>除此之外，Play Store 上的统计显示，在数十万的 session 中，Crash and ANR 总 report 仅为 2，而且还是因为加载图片导致 OutOfMemory 导致的。</p>

<p>1.2 版本放上去之后，我既没有宣传，也没有做推广。对于一个只懂开发的团队来说，似乎事情已经做完了，下一步该怎么办呢？我没有思路。于是就在 Play Store 上那么放着吧。国内的各种山寨菜市场我觉得太乱，都没有放，于是相当于放弃了国内用户。</p>

<p>于是就那么放在那里了，没有任何波澜，但是生活还要继续。</p>

<p>一段时间之后，当我打开 Play Store 控制台的时候，惊奇地发现，游戏居然还是有点用户的，虽然不多，只有 4000 多一点，但是遍布世界各地几十个国家，还有不少用户写了很长的评论来骂我，说游戏玩了半天，结果发现有 bug，游戏进度不能保存，前面玩过的都白玩了，真是愚蠢的游戏。我顿时感动的痛哭流涕，积木还是有一点存在感的，好吧既然有存在感我就修复一下 bug 吧。</p>

<p>一番检查发现，进度不能保存居然是由于 Android 系统升级造成的密码函数默认参数变化导致的，修复了之后，就发布了版本 1.3 。这个时候，又是大半年时光过去了。后来，当我想升级游戏引擎的时候，发现 AndEngine 已经接口大变，根本没法适配到以前的接口了，而且，我还改过一部分 AndEngine 代码，于是，便不再改了，当我想升级 Google Analytics 代码的时候，也发现真是各种麻烦，甚至我想升级 Android Studio 的新 Gradle 系统的时候，都各种不能正确解决。一个项目就这样横跨多年，时过境迁，经历 Android 生态的变革，真是感慨万分，算了，都不升级了，就这样罢。</p>

<p>到了 2014 年，又遇到几个小朋友。几个小朋友一玩游戏就是爱不释手，又给我一种似乎游戏不是那么挫的假象。后来，遇到了另外一位朋友，他也觉得很好玩，说想帮我做推广。我想了想说好，反正不会有什么结果，就当做推广练习吧。</p>

<p>于是，在他的要求之下，加上了分享过关截图和社交分享功能。本来积木只需要网络权限的，为了集成 <a href="http://sharesdk.cn/">ShareSDK</a>，一下子添加了七八个敏感权限，真是痛心。</p>

<p>我还做了一个<a href="http://joystacker.rayx.io/">官方主页</a>，哎，只花了一个小时你们就别吐槽不兼容手机，不好看，啥玩意了，虽然我也不忍吐槽说这是我做的，但是夜里 2 点不睡觉来写网页真的已经是怀着无限的美好向往和全人类繁荣发展的美好信念了。</p>

<p>终于弄好了，再次升级版本上线，这次注册了人人、新浪微博、facebook、twitter 等各种官方账号，并且，新浪微博还专门找了水军转发，感觉好激动呢。只不过，等等，同学，水军质量堪忧啊！</p>

<p><img src="/images/joystacker/js-forward.jpg" alt="water-army" /></p>

<p><img src="/images/joystacker/low-forwarder.png" alt="water-army" /></p>

<p>唉，我都看不下去了，赶紧让同学帮忙转发起来，终于把第一页转发和评论弄和谐了。。</p>

<p>让我非常诧异的事情是，盗版猖獗啊，速度快过 Chrome 版本号啊！就在不久前，我看到<a href="http://weibo.com/2417104112/B8QNH2yBr?type=repost">清华美院同学的设计作品在各个市场被盗版和抄袭的事情</a>，还在想盗版何以如此之快，哪知道两天后就体会到了啊。先来看一下盗版的量：</p>

<p><img src="/images/joystacker/pirated.png" alt="pirated" /></p>

<p>豌豆荚你是怎么想的啊。。这么多长得一模一样的应用上线，怎么对得起豌豆荚高质量的名号啊，好在正版的下载量位居第一，稍微有点安慰(咦真的是没有刷榜吗就上万下载量了？不敢相信啊。。)。</p>

<p>再看这家盗版</p>

<p><img src="/images/joystacker/anzhuoapk.png" alt="anzhuoapk" /></p>

<p>这位盗版同学，你盗版都好意思把公司名称写出来吗？你上传个游戏截图，能不能保持比例不变形啊！还有，第三关根本不是你那么玩的啊！！！你盗版也好好玩一下啊！！</p>

<p>注意上面这张图的时间，2014 年 6 月 13，也就是我发布国内版本刚刚 1 天就被盗版，速度之快令人咂舌。</p>

<p>我在 google analytic 后台，看到了至少有 5 家不同的盗版，甚至还有盗版占据了更高版本号！</p>

<p><img src="/images/joystacker/joystacker-version.png" alt="img" /></p>

<p>我只想吐槽，盗版商你们不给力啊！盗版了不宣传不推广怎么赚钱啊！本来还指望你们盗版商给我免费推广呢啊！你们现在还没我正版下载多，怎么赚钱啊！玩毛啊！摔！</p>

<p>其实，除了业界良心无广告正版之外，我曾经还上线过一个有广告 1.5 版本，想看看广告收入情况如何，结果 1.5 版本最终收益是。。当当当当，50 块钱，于是瞄了一眼盗版应用在我这里的记录。。还不到我 1.5 版本的使用数。。盗版商童鞋，你那么辛苦盗版一下，才挣不到 50 块钱，真是感觉为你们心寒呢！</p>

<p>盗版就不说那么多了，我会再写一篇盗版技术分析的文章来说这个事情。</p>

<p>最终的最终，当这个欢乐的旅程走向终点的时候，我依然想吐槽，想做一个好游戏是多么累的一件事情，大家花了大量的精力、时间，玩过的人都说好，评论质量也很高(Play Store Rating 在 3.8 左右)，但是没有推广、没有运营，游戏就是没人玩，也不会有收入，更没法抵挡盗版大军的随意侵袭（当我向豌豆荚投诉盗版应用的时候，豌豆荚表示需要我提供软件著作权才能下架对方盗版）。还有市场如此混乱，各个市场各有各的奇葩要求，真是累觉不爱，人艰不拆。</p>

<p>现在回顾这一切，心态早已不同，也不会再去做曾经的这些事情了。</p>

<p>感谢诚哥、张光耀、张泽清大神、刘超、董玲曾经的付出，这是一个欢乐的旅程，虽然最终没有多少回报，但是能与各位并肩作战，完成一个有存在感、看起来萌萌傻傻、玩起来却又挑战智商的游戏，还是幸福感爆棚的！</p>

<p>谨以此文纪念曾经的少年热情。</p>

<p>最终放上游戏下载链接 <a href="http://joystacker.rayx.io">官方主页</a>，求别吐槽，自己下载玩就行，好人一生平安！</p>
]]></content>
  </entry>
  
</feed>
